"""align ck_metrics model and ensure camelcase columns

Revision ID: 48f8433d8d73
Revises: 05fbb2c9ea3b
Create Date: 2025-04-01 18:42:32.460232

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48f8433d8d73'
down_revision: Union[str, None] = '05fbb2c9ea3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ck_metrics', sa.Column('type', sa.String(), nullable=True))
    op.add_column('ck_metrics', sa.Column('cboModified', sa.Float(), nullable=True))
    op.add_column('ck_metrics', sa.Column('fanin', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('fanout', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('tcc', sa.Float(), nullable=True))
    op.add_column('ck_metrics', sa.Column('lcc', sa.Float(), nullable=True))
    op.add_column('ck_metrics', sa.Column('totalMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('staticMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('publicMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('privateMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('protectedMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('defaultMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('visibleMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('abstractMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('finalMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('synchronizedMethodsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('totalFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('staticFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('publicFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('privateFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('protectedFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('defaultFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('finalFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('synchronizedFieldsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('returnQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('loopQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('comparisonsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('tryCatchQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('parenthesizedExpsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('stringLiteralsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('numbersQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('assignmentsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('mathOperationsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('variablesQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('maxNestedBlocksQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('anonymousClassesQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('innerClassesQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('lambdasQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('uniqueWordsQty', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('modifiers', sa.Integer(), nullable=True))
    op.add_column('ck_metrics', sa.Column('logStatementsQty', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_ck_metrics_class'), 'ck_metrics', ['class'], unique=False)
    op.create_index(op.f('ix_ck_metrics_file'), 'ck_metrics', ['file'], unique=False)
    op.drop_column('ck_metrics', 'dic')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ck_metrics', sa.Column('dic', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_ck_metrics_file'), table_name='ck_metrics')
    op.drop_index(op.f('ix_ck_metrics_class'), table_name='ck_metrics')
    op.drop_column('ck_metrics', 'logStatementsQty')
    op.drop_column('ck_metrics', 'modifiers')
    op.drop_column('ck_metrics', 'uniqueWordsQty')
    op.drop_column('ck_metrics', 'lambdasQty')
    op.drop_column('ck_metrics', 'innerClassesQty')
    op.drop_column('ck_metrics', 'anonymousClassesQty')
    op.drop_column('ck_metrics', 'maxNestedBlocksQty')
    op.drop_column('ck_metrics', 'variablesQty')
    op.drop_column('ck_metrics', 'mathOperationsQty')
    op.drop_column('ck_metrics', 'assignmentsQty')
    op.drop_column('ck_metrics', 'numbersQty')
    op.drop_column('ck_metrics', 'stringLiteralsQty')
    op.drop_column('ck_metrics', 'parenthesizedExpsQty')
    op.drop_column('ck_metrics', 'tryCatchQty')
    op.drop_column('ck_metrics', 'comparisonsQty')
    op.drop_column('ck_metrics', 'loopQty')
    op.drop_column('ck_metrics', 'returnQty')
    op.drop_column('ck_metrics', 'synchronizedFieldsQty')
    op.drop_column('ck_metrics', 'finalFieldsQty')
    op.drop_column('ck_metrics', 'defaultFieldsQty')
    op.drop_column('ck_metrics', 'protectedFieldsQty')
    op.drop_column('ck_metrics', 'privateFieldsQty')
    op.drop_column('ck_metrics', 'publicFieldsQty')
    op.drop_column('ck_metrics', 'staticFieldsQty')
    op.drop_column('ck_metrics', 'totalFieldsQty')
    op.drop_column('ck_metrics', 'synchronizedMethodsQty')
    op.drop_column('ck_metrics', 'finalMethodsQty')
    op.drop_column('ck_metrics', 'abstractMethodsQty')
    op.drop_column('ck_metrics', 'visibleMethodsQty')
    op.drop_column('ck_metrics', 'defaultMethodsQty')
    op.drop_column('ck_metrics', 'protectedMethodsQty')
    op.drop_column('ck_metrics', 'privateMethodsQty')
    op.drop_column('ck_metrics', 'publicMethodsQty')
    op.drop_column('ck_metrics', 'staticMethodsQty')
    op.drop_column('ck_metrics', 'totalMethodsQty')
    op.drop_column('ck_metrics', 'lcc')
    op.drop_column('ck_metrics', 'tcc')
    op.drop_column('ck_metrics', 'fanout')
    op.drop_column('ck_metrics', 'fanin')
    op.drop_column('ck_metrics', 'cboModified')
    op.drop_column('ck_metrics', 'type')
    # ### end Alembic commands ###
