"""Add cleaning_rule_definitions table

Revision ID: ed8aa882ba7b
Revises: e39d1ab0a19f
Create Date: 2025-04-04 13:39:48.413925

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ed8aa882ba7b"
down_revision: Union[str, None] = "e39d1ab0a19f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cleaning_rule_definitions",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=False),
        sa.Column("is_batch_safe", sa.Boolean(), nullable=False),
        sa.Column("is_implemented", sa.Boolean(), nullable=False),
        sa.Column("last_updated_by", sa.String(), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_index(
        op.f("ix_cleaning_rule_definitions_is_implemented"),
        "cleaning_rule_definitions",
        ["is_implemented"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_cleaning_rule_definitions_is_implemented"),
        table_name="cleaning_rule_definitions",
    )
    op.drop_table("cleaning_rule_definitions")
    # ### end Alembic commands ###
