# PostgreSQL Settings
POSTGRES_SERVER=db
POSTGRES_PORT=5432
POSTGRES_USER=jitpuser
POSTGRES_PASSWORD=changeme # <-- CHANGE THIS!
POSTGRES_DB=jitpdb
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}

# RabbitMQ Settings
RABBITMQ_HOST=broker
RABBITMQ_PORT=5672
RABBITMQ_DEFAULT_USER=guest
RABBITMQ_DEFAULT_PASS=guest # <-- CHANGE THIS in production!

# Celery Settings (used by backend and worker to connect)
CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}//
#CELERY_RESULT_BACKEND=db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB} # Example using DB as result backend
CELERY_RESULT_BACKEND=redis://ckguru_redis:6379/0

# fsspec Storage Settings (used by backend and worker)
# For local storage via compose volume, protocol is 'file'
# STORAGE_BASE_PATH is set via 'environment' in docker-compose.yml to /app/persistent_data
STORAGE_PROTOCOL=file

# FastAPI/Backend Settings
# Add any API keys or specific backend settings here
# Example: SECRET_KEY=your_secret_key_here

# Frontend Settings (if React needs env vars during build)
# Example: REACT_APP_API_BASE_URL=http://localhost:8000/api/v1

# Git Webhook Verification Secret (Important!)
GITHUB_WEBHOOK_SECRET=your_super_secret_webhook_token # <-- CHANGE THIS!
# Add secrets for other providers if needed (GITLAB_WEBHOOK_SECRET, etc.)

# --- Optional: Other Settings ---
LOG_LEVEL=INFO
# SECRET_KEY=your_fastapi_secret_key # Add if needed for JWT etc.

GITHUB_TOKEN="YOUR_GITHUB_PERSONAL_ACCESS_TOKEN" # Optional: Set your PAT here for issue tracking

# OBJECT STORAGE (MinIO Example - adjust for real S3)
OBJECT_STORAGE_TYPE=s3 # or 'minio' - helps logic but s3fs handles both
S3_ENDPOINT_URL=http://minio:9000 # For MinIO/non-AWS S3
S3_ACCESS_KEY_ID=YOUR_MINIO_ACCESS_KEY # Use secure keys
S3_SECRET_ACCESS_KEY=YOUR_MINIO_SECRET_KEY # Use secure keys
S3_BUCKET_NAME=ck-guru-datasets
S3_REGION=us-east-1 # Optional, but sometimes needed
S3_USE_SSL=true # Set to true if MinIO/S3 endpoint uses HTTPS